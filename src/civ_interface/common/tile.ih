#ifndef FC__TILE_INLINE_H
#define FC__TILE_INLINE_H

#include "base.h"
#include "fc_types.h"
#include "player.h"
#include "terrain.h"
#include "unitlist.h"
#include "terrain.ih"

//[SB] struct city *tile_city(const struct tile *ptile);
static inline struct city *tile_city(const struct tile *ptile)
{
  struct city *pcity = ptile->worked;

  if (NULL != pcity && is_city_center(pcity, ptile)) {
    return pcity;
  }
  return NULL;
}


//[SB] void tile_set_continent(struct tile *ptile, Continent_id val);
static inline void tile_set_continent(struct tile *ptile, Continent_id val)
{
  ptile->continent = val;
}


//[SB] void tile_set_worked(struct tile *ptile, struct city *pcity);
static inline void tile_set_worked(struct tile *ptile, struct city *pcity)
{ ptile->worked = pcity; }


/* Specials are a bit different */
//[SB] bv_special tile_specials(const struct tile *ptile);
static inline bv_special tile_specials(const struct tile *ptile)
{
  return ptile->special;
}

//[SB] void tile_set_specials(struct tile *ptile, bv_special specials);
static inline void tile_set_specials(struct tile *ptile, bv_special specials)
{
  if (!ptile) {
    return;
  }
  ptile->special = specials;
}

//[SB] bool tile_has_special(const struct tile *ptile, enum tile_special_type to_test_for);
static inline bool tile_has_special(const struct tile *ptile, enum tile_special_type special)
{
  return contains_special(ptile->special, special);
}

//[SB] bool tile_has_any_specials(const struct tile *ptile);
static inline bool tile_has_any_specials(const struct tile *ptile)
{
  return contains_any_specials(ptile->special);
}

//[SB] void tile_set_special(struct tile *ptile, enum tile_special_type spe);
static inline void tile_set_special(struct tile *ptile, enum tile_special_type spe)
{
  set_special(&ptile->special, spe);
}

//[SB] void tile_clear_special(struct tile *ptile, enum tile_special_type spe);
static inline void tile_clear_special(struct tile *ptile, enum tile_special_type spe)
{
  clear_special(&ptile->special, spe);
}

//[SB] void tile_clear_all_specials(struct tile *ptile);
static inline void tile_clear_all_specials(struct tile *ptile)
{
  clear_all_specials(&ptile->special);
}


#endif 
